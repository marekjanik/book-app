{"version":3,"sources":["webpack://book-app/./src/js/toggleContentEditable.js","webpack://book-app/./src/js/addRecord.js","webpack://book-app/./src/js/validateForm.js","webpack://book-app/./src/js/app.js","webpack://book-app/./src/js/getDataFromJSON.js","webpack://book-app/./src/js/getDataFromAPI.js","webpack://book-app/webpack/startup"],"names":["editable","toggleContentEditable","e","record","target","parentElement","btn","contentEditable","classList","focus","innerHTML","addRecord","title","author","isbn","table","document","querySelector","row","createElement","add","appendChild","querySelectorAll","forEach","addEventListener","remove","formInput","titleInput","authorInput","isbnInput","preventDefault","input","value","alert","isNaN","textContent","before","removeAlert","setTimeout","body","removeChild","Number","clearTimeout","i","data","getDataFromJSON","books","length","fetch","then","response","json","book","volumeInfo","authors","industryIdentifiers","identifier","getDataFromAPI","__webpack_modules__"],"mappings":"qCAAA,IAAIA,GAAW,EAER,SAASC,EAAsBC,GACpCF,GAAYA,EAGZ,IAAMG,EAASD,EAAEE,OAAOC,cAAcA,cAAcA,cAG9CC,EAAMJ,EAAEE,OAAOC,cAAcA,cAEnCF,EAAOI,gBAAkBP,EACzBM,EAAIC,iBAAkB,EAEN,GAAZP,GAA8C,QAA1BE,EAAEE,OAAOI,UAAU,IACzCL,EAAOM,QACPP,EAAEE,OAAOC,cAAcK,UAAvB,8CACqB,GAAZV,GAA+C,QAA1BE,EAAEE,OAAOI,UAAU,KACjDN,EAAEE,OAAOC,cAAcK,UAAvB,qCChBG,SAASC,EAAUC,EAAOC,EAAQC,GACvC,IAAMC,EAAQC,SAASC,cAAc,gBAG/BC,EAAMF,SAASG,cAAc,MACnCD,EAAIV,UAAUY,IAAI,cAElBF,EAAIR,UAAJ,iHAGcE,EAHd,kGAMcC,EANd,gGAScC,EATd,8UAsBAC,EAAMM,YAAYH,GAGAF,SAASM,iBAAiB,eAElCC,SAAQ,SAACjB,GAAD,OAChBA,EAAIkB,iBAAiB,SAAS,SAACtB,GAC7B,IAAMC,EAASD,EAAEE,OAAOC,cAAcA,cAAcA,cAExB,eAAxBF,EAAOK,UAAU,IACnBL,EAAOsB,eAMGT,SAASM,iBAAiB,aAGlCC,SAAQ,SAACjB,GAAD,OACdA,EAAIkB,iBAAiB,QAASvB,MChDlC,IAAMc,EAAQC,SAASC,cAAc,UAC/BS,EAAYV,SAASM,iBAAiB,gBACtCK,EAAaX,SAASC,cAAc,gBACpCW,EAAcZ,SAASC,cAAc,iBACrCY,EAAYb,SAASC,cAAc,e,uRCH1BD,SAASC,cAAc,cAE/BO,iBAAiB,SDGjB,SAAsBtB,GAE3BA,EAAE4B,iBAGF,IAAMC,EAAQ,CACZnB,MAAOe,EAAWK,MAClBnB,OAAQe,EAAYI,MACpBlB,KAAMe,EAAUG,OAIZC,EAAQjB,SAASG,cAAc,KACrCc,EAAMzB,UAAUY,IAAI,eAGhBc,MAAMH,EAAMjB,QACdmB,EAAME,YAAc,mCACpBpB,EAAMqB,OAAOH,IAIfP,EAAUH,SAAQ,SAACQ,GACG,KAAhBA,EAAMC,QACRC,EAAME,YAAc,4BACpBpB,EAAMqB,OAAOH,OAKjB,IAAMI,EAAcC,YAAW,WAC7BtB,SAASuB,KAAKC,YAAYP,KACzB,KAGe,KAAhBF,EAAMnB,OACiB,KAAvBmB,EAAMlB,OAAOmB,OACQ,KAArBD,EAAMjB,KAAKkB,OACXS,OAAOV,EAAMjB,QAEb4B,aAAaL,GAGb1B,EAAUoB,EAAMnB,MAAOmB,EAAMlB,OAAQkB,EAAMjB,OAI7CY,EAAUH,SAAQ,SAACQ,GACjBA,EAAMC,MAAQ,SEnDX,WACL,IAAK,IAAIW,EAAI,EAAGA,EAAI,EAAGA,IAKrBhC,EAJciC,IAAUD,GAAG/B,MACZgC,IAAUD,GAAG9B,OACf+B,IAAUD,GAAG7B,MDF9B+B,GELO,WAGL,IAFA,IAAMC,EAAQ,CAAC,eAAgB,gBAEtBH,EAAI,EAAGA,EAAIG,EAAMC,OAAQJ,IAChCK,MAAM,+CAAD,OAAgDF,EAAMH,KAAMM,MAC/D,SAACC,GAAD,OACEA,EAASC,OAAOF,MAAK,SAACG,GAKpBzC,EAJcyC,EAAKC,WAAWzC,MACfwC,EAAKC,WAAWC,QAAQ,GAC1BF,EAAKC,WAAWE,oBAAoB,GAAGC,kBFH9DC,GGLAC,G","file":"bundle.min.js","sourcesContent":["let editable = false;\n\nexport function toggleContentEditable(e) {\n  editable = !editable;\n\n  // An edited row element\n  const record = e.target.parentElement.parentElement.parentElement;\n\n  // A row's button element\n  const btn = e.target.parentElement.parentElement;\n\n  record.contentEditable = editable;\n  btn.contentEditable = false;\n\n  if (editable == true && e.target.classList[0] === \"fas\") {\n    record.focus();\n    e.target.parentElement.innerHTML = `<i class=\"fas fa-check-square edited\"></i>`;\n  } else if (editable == false && e.target.classList[0] === \"fas\") {\n    e.target.parentElement.innerHTML = `<i class=\"fas fa-pen-square\"></i>`;\n  }\n}\n","import { toggleContentEditable } from \"./toggleContentEditable\";\n\nexport function addRecord(title, author, isbn) {\n  const table = document.querySelector(\".table__body\");\n\n  // Create row element\n  const row = document.createElement(\"tr\");\n  row.classList.add(\"table__row\");\n\n  row.innerHTML = `\n          <tr class=\"table__row\" >\n            <td class=\"table__data table__title\">\n              ${title}\n            </td>\n            <td class=\"table__data table__author\">\n              ${author}\n            </td>\n            <td class=\"table__data table__isbn\">\n              ${isbn}\n            </td>\n            <td class=\"table__btn\">\n              <button class=\"btn-edit\">\n                <i class=\"fas fa-pen-square\"></i>\n              </button>\n              <button class=\"btn-delete\">\n                <i class=\"fas fa-window-close\"></i>\n              </button>\n            </td>\n          </tr>`;\n\n  // Append row element to table\n  table.appendChild(row);\n\n  // Remove record from table\n  const deleteBtn = document.querySelectorAll(\".btn-delete\");\n\n  deleteBtn.forEach((btn) =>\n    btn.addEventListener(\"click\", (e) => {\n      const record = e.target.parentElement.parentElement.parentElement;\n\n      if (record.classList[0] === \"table__row\") {\n        record.remove();\n      }\n    })\n  );\n\n  // Edit record in table\n  const editBtn = document.querySelectorAll(\".btn-edit\");\n\n  // Enable and disable record's content edit on click\n  editBtn.forEach((btn) =>\n    btn.addEventListener(\"click\", toggleContentEditable)\n  );\n}\n","import { addRecord } from \"./addRecord\";\n\n// Get DOM elements\nconst table = document.querySelector(\".table\");\nconst formInput = document.querySelectorAll(\".form__input\");\nconst titleInput = document.querySelector(\".title-input\");\nconst authorInput = document.querySelector(\".author-input\");\nconst isbnInput = document.querySelector(\".isbn-input\");\n\nexport function validateForm(e) {\n  // Prevent default button event\n  e.preventDefault();\n\n  // Hold inputs data\n  const input = {\n    title: titleInput.value,\n    author: authorInput.value,\n    isbn: isbnInput.value,\n  };\n\n  // Create alert element\n  const alert = document.createElement(\"p\");\n  alert.classList.add(\"form__alert\");\n\n  // If ISBN input isn't number\n  if (isNaN(input.isbn)) {\n    alert.textContent = \"Please enter a valid ISBN number\";\n    table.before(alert);\n  }\n\n  // If any input is empty\n  formInput.forEach((input) => {\n    if (input.value === \"\") {\n      alert.textContent = \"Please fill in all fields\";\n      table.before(alert);\n    }\n  });\n\n  // Remove alert element after 3 seconds\n  const removeAlert = setTimeout(() => {\n    document.body.removeChild(alert);\n  }, 3000);\n\n  if (\n    input.title !== \"\" &&\n    input.author.value !== \"\" &&\n    input.isbn.value !== \"\" &&\n    Number(input.isbn)\n  ) {\n    clearTimeout(removeAlert);\n\n    // If all inputs are filled\n    addRecord(input.title, input.author, input.isbn);\n  }\n\n  // Clear inputs after adding new record\n  formInput.forEach((input) => {\n    input.value = \"\";\n  });\n}\n","import { validateForm } from \"./validateForm\";\nimport { getDataFromJSON } from \"./getDataFromJSON\";\nimport { getDataFromAPI } from \"./getDataFromAPI\";\n\nconst addBtn = document.querySelector(\".form__btn\");\n\naddBtn.addEventListener(\"click\", validateForm);\n\ngetDataFromJSON();\ngetDataFromAPI();\n","import { addRecord } from \"./addRecord\";\n\n// Get mock data from the JSON file\nimport data from \"./../../data.json\";\n\n// Add JSON mock data to the table\nexport function getDataFromJSON() {\n  for (let i = 0; i < 3; i++) {\n    const title = data.book[i].title;\n    const author = data.book[i].author;\n    const isbn = data.book[i].isbn;\n\n    addRecord(title, author, isbn);\n  }\n}\n","import { addRecord } from \"./addRecord\";\n\n// Add API mock data to the table\nexport function getDataFromAPI() {\n  const books = [\"lGjFtMRqp_YC\", \"Buu4rQEACAAJ\"];\n\n  for (let i = 0; i < books.length; i++) {\n    fetch(`https://www.googleapis.com/books/v1/volumes/${books[i]}`).then(\n      (response) =>\n        response.json().then((book) => {\n          const title = book.volumeInfo.title;\n          const author = book.volumeInfo.authors[0];\n          const isbn = book.volumeInfo.industryIdentifiers[0].identifier;\n\n          addRecord(title, author, isbn);\n        })\n    );\n  }\n}\n","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[328]();\n"],"sourceRoot":""}